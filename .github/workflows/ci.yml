name: CI

env:
  CARGO_TERM_COLOR: always

inputs:
  rust:
    required: false
    description: "Rust toolchain, e.g. 'stable' or 'nightly'"
    default: stable
  cache-key:
    required: false
    description: "Extra key to resolve cache"
    default: ''

on: [push]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        run: |
          rustup toolchain install ${{ inputs.rust }} --profile minimal --no-self-update
          rustup default ${{ inputs.rust }}
      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.cache-key }}
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        run: |
          rustup toolchain install ${{ inputs.rust }} --profile minimal --no-self-update
          rustup default ${{ inputs.rust }}
      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.cache-key }}
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: target/release/
    

  doc:
    name: Rustdoc
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        run: |
          rustup toolchain install ${{ inputs.rust }} --profile minimal --no-self-update
          rustup default ${{ inputs.rust }}
      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.cache-key }}
      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: -vv --all-features
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: doc
          path: target/doc/
    
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        run: |
          rustup toolchain install ${{ inputs.rust }} --profile minimal --no-self-update
          rustup default ${{ inputs.rust }}
      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.cache-key }}
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        run: |
          rustup toolchain install ${{ inputs.rust }} --profile minimal --no-self-update
          rustup default ${{ inputs.rust }}
      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.cache-key }}
      - run: rustup component add rustfmt
      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        run: |
          rustup toolchain install ${{ inputs.rust }} --profile minimal --no-self-update
          rustup default ${{ inputs.rust }}
      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.cache-key }}
      - run: rustup component add clippy
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        run: |
          rustup toolchain install ${{ inputs.rust }} --profile minimal --no-self-update
          rustup default ${{ inputs.rust }}
      - name: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.cache-key }}
      - name: cargo install tarpaulin
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-tarpaulin
      - name: cargo tarpaulin
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
      - name: upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error:     true
